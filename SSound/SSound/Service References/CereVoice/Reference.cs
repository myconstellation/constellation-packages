//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SSound.CereVoice {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="https://cerevoice.com/soap/cloudservice.wsdl", ConfigurationName="CereVoice.CereVoiceCloudPortType")]
    public interface CereVoiceCloudPortType {
        
        [System.ServiceModel.OperationContractAttribute(Action="#speakSimple", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        SSound.CereVoice.speakSimpleResponse speakSimple(SSound.CereVoice.speakSimpleRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="#speakSimple", ReplyAction="*")]
        System.Threading.Tasks.Task<SSound.CereVoice.speakSimpleResponse> speakSimpleAsync(SSound.CereVoice.speakSimpleRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="#speakExtended", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        SSound.CereVoice.speakExtendedResponse speakExtended(SSound.CereVoice.speakExtendedRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="#speakExtended", ReplyAction="*")]
        System.Threading.Tasks.Task<SSound.CereVoice.speakExtendedResponse> speakExtendedAsync(SSound.CereVoice.speakExtendedRequest request);
        
        // CODEGEN: Generating message contract since the wrapper namespace (http://cerevoice.com/soap/cloudservice) of message listVoicesRequest does not match the default value (https://cerevoice.com/soap/cloudservice.wsdl)
        [System.ServiceModel.OperationContractAttribute(Action="#listVoices", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        SSound.CereVoice.listVoicesResponse listVoices(SSound.CereVoice.listVoicesRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="#listVoices", ReplyAction="*")]
        System.Threading.Tasks.Task<SSound.CereVoice.listVoicesResponse> listVoicesAsync(SSound.CereVoice.listVoicesRequest request);
        
        // CODEGEN: Generating message contract since the wrapper namespace (http://cerevoice.com/soap/cloudservice) of message listLexiconsRequest does not match the default value (https://cerevoice.com/soap/cloudservice.wsdl)
        [System.ServiceModel.OperationContractAttribute(Action="#listLexicons", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        SSound.CereVoice.listLexiconsResponse listLexicons(SSound.CereVoice.listLexiconsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="#listLexicons", ReplyAction="*")]
        System.Threading.Tasks.Task<SSound.CereVoice.listLexiconsResponse> listLexiconsAsync(SSound.CereVoice.listLexiconsRequest request);
        
        // CODEGEN: Generating message contract since the wrapper namespace (http://cerevoice.com/soap/cloudservice) of message listAbbreviationsRequest does not match the default value (https://cerevoice.com/soap/cloudservice.wsdl)
        [System.ServiceModel.OperationContractAttribute(Action="#listAbbreviations", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        SSound.CereVoice.listAbbreviationsResponse listAbbreviations(SSound.CereVoice.listAbbreviationsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="#listAbbreviations", ReplyAction="*")]
        System.Threading.Tasks.Task<SSound.CereVoice.listAbbreviationsResponse> listAbbreviationsAsync(SSound.CereVoice.listAbbreviationsRequest request);
        
        // CODEGEN: Generating message contract since the wrapper namespace (http://cerevoice.com/soap/cloudservice) of message listAudioFormatsRequest does not match the default value (https://cerevoice.com/soap/cloudservice.wsdl)
        [System.ServiceModel.OperationContractAttribute(Action="#listAudioFormats", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        SSound.CereVoice.listAudioFormatsResponse listAudioFormats(SSound.CereVoice.listAudioFormatsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="#listAudioFormats", ReplyAction="*")]
        System.Threading.Tasks.Task<SSound.CereVoice.listAudioFormatsResponse> listAudioFormatsAsync(SSound.CereVoice.listAudioFormatsRequest request);
        
        // CODEGEN: Generating message contract since the wrapper namespace (http://cerevoice.com/soap/cloudservice) of message getCreditRequest does not match the default value (https://cerevoice.com/soap/cloudservice.wsdl)
        [System.ServiceModel.OperationContractAttribute(Action="#getCredit", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        SSound.CereVoice.getCreditResponse getCredit(SSound.CereVoice.getCreditRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="#getCredit", ReplyAction="*")]
        System.Threading.Tasks.Task<SSound.CereVoice.getCreditResponse> getCreditAsync(SSound.CereVoice.getCreditRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="#uploadLexicon", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        SSound.CereVoice.uploadLexiconResponse uploadLexicon(SSound.CereVoice.uploadLexiconRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="#uploadLexicon", ReplyAction="*")]
        System.Threading.Tasks.Task<SSound.CereVoice.uploadLexiconResponse> uploadLexiconAsync(SSound.CereVoice.uploadLexiconRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="#uploadAbbreviations", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        SSound.CereVoice.uploadAbbreviationsResponse uploadAbbreviations(SSound.CereVoice.uploadAbbreviationsRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="#uploadAbbreviations", ReplyAction="*")]
        System.Threading.Tasks.Task<SSound.CereVoice.uploadAbbreviationsResponse> uploadAbbreviationsAsync(SSound.CereVoice.uploadAbbreviationsRequest request);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="speakSimple", WrapperNamespace="http://cerevoice.com/soap/cloudservice", IsWrapped=true)]
    public partial class speakSimpleRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=0)]
        public string accountID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=1)]
        public string password;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=2)]
        public string voice;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=3)]
        public string text;
        
        public speakSimpleRequest() {
        }
        
        public speakSimpleRequest(string accountID, string password, string voice, string text) {
            this.accountID = accountID;
            this.password = password;
            this.voice = voice;
            this.text = text;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="speakSimpleResponse", WrapperNamespace="http://cerevoice.com/soap/cloudservice", IsWrapped=true)]
    public partial class speakSimpleResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=0)]
        public string fileUrl;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=1)]
        public int charCount;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=2)]
        public int resultCode;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=3)]
        public string resultDescription;
        
        public speakSimpleResponse() {
        }
        
        public speakSimpleResponse(string fileUrl, int charCount, int resultCode, string resultDescription) {
            this.fileUrl = fileUrl;
            this.charCount = charCount;
            this.resultCode = resultCode;
            this.resultDescription = resultDescription;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="speakExtended", WrapperNamespace="http://cerevoice.com/soap/cloudservice", IsWrapped=true)]
    public partial class speakExtendedRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=0)]
        public string accountID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=1)]
        public string password;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=2)]
        public string voice;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=3)]
        public string text;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=4)]
        public string contentType;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=5)]
        public int sampleRate;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=6)]
        public bool audio3D;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=7)]
        public bool metadata;
        
        public speakExtendedRequest() {
        }
        
        public speakExtendedRequest(string accountID, string password, string voice, string text, string contentType, int sampleRate, bool audio3D, bool metadata) {
            this.accountID = accountID;
            this.password = password;
            this.voice = voice;
            this.text = text;
            this.contentType = contentType;
            this.sampleRate = sampleRate;
            this.audio3D = audio3D;
            this.metadata = metadata;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="speakExtendedResponse", WrapperNamespace="http://cerevoice.com/soap/cloudservice", IsWrapped=true)]
    public partial class speakExtendedResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=0)]
        public string fileUrl;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=1)]
        public int charCount;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=2)]
        public int resultCode;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=3)]
        public string resultDescription;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=4)]
        public string metadataUrl;
        
        public speakExtendedResponse() {
        }
        
        public speakExtendedResponse(string fileUrl, int charCount, int resultCode, string resultDescription, string metadataUrl) {
            this.fileUrl = fileUrl;
            this.charCount = charCount;
            this.resultCode = resultCode;
            this.resultDescription = resultDescription;
            this.metadataUrl = metadataUrl;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2612.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://cerevoice.com/soap/cloudschema")]
    public partial class listVoices : object, System.ComponentModel.INotifyPropertyChanged {
        
        private object itemField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("error", typeof(Error), Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0)]
        [System.Xml.Serialization.XmlElementAttribute("voicesList", typeof(voiceArray), Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0)]
        public object Item {
            get {
                return this.itemField;
            }
            set {
                this.itemField = value;
                this.RaisePropertyChanged("Item");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2612.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://cerevoice.com/soap/cloudschema")]
    public partial class Error : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int resultCodeField;
        
        private string resultDescriptionField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int resultCode {
            get {
                return this.resultCodeField;
            }
            set {
                this.resultCodeField = value;
                this.RaisePropertyChanged("resultCode");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string resultDescription {
            get {
                return this.resultDescriptionField;
            }
            set {
                this.resultDescriptionField = value;
                this.RaisePropertyChanged("resultDescription");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2612.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://cerevoice.com/soap/cloudschema")]
    public partial class Credit : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int freeCreditField;
        
        private int paidCreditField;
        
        private int charsAvailableField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int freeCredit {
            get {
                return this.freeCreditField;
            }
            set {
                this.freeCreditField = value;
                this.RaisePropertyChanged("freeCredit");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int paidCredit {
            get {
                return this.paidCreditField;
            }
            set {
                this.paidCreditField = value;
                this.RaisePropertyChanged("paidCredit");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int charsAvailable {
            get {
                return this.charsAvailableField;
            }
            set {
                this.charsAvailableField = value;
                this.RaisePropertyChanged("charsAvailable");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2612.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://cerevoice.com/soap/cloudschema")]
    public partial class GetCredit : object, System.ComponentModel.INotifyPropertyChanged {
        
        private object itemField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("credit", typeof(Credit), Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0)]
        [System.Xml.Serialization.XmlElementAttribute("error", typeof(Error), Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0)]
        public object Item {
            get {
                return this.itemField;
            }
            set {
                this.itemField = value;
                this.RaisePropertyChanged("Item");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2612.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://cerevoice.com/soap/cloudschema")]
    public partial class formatArray : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string[] formatField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("format", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0)]
        public string[] format {
            get {
                return this.formatField;
            }
            set {
                this.formatField = value;
                this.RaisePropertyChanged("format");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2612.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://cerevoice.com/soap/cloudschema")]
    public partial class listAudioFormats : object, System.ComponentModel.INotifyPropertyChanged {
        
        private object itemField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("error", typeof(Error), Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0)]
        [System.Xml.Serialization.XmlElementAttribute("formatList", typeof(formatArray), Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0)]
        public object Item {
            get {
                return this.itemField;
            }
            set {
                this.itemField = value;
                this.RaisePropertyChanged("Item");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2612.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://cerevoice.com/soap/cloudschema")]
    public partial class abbreviationArray : object, System.ComponentModel.INotifyPropertyChanged {
        
        private abbreviation[] aArrayField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("aArray", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0)]
        public abbreviation[] aArray {
            get {
                return this.aArrayField;
            }
            set {
                this.aArrayField = value;
                this.RaisePropertyChanged("aArray");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2612.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://cerevoice.com/soap/cloudschema")]
    public partial class abbreviation : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string urlField;
        
        private string languageField;
        
        private string lastModifiedField;
        
        private string sizeField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string url {
            get {
                return this.urlField;
            }
            set {
                this.urlField = value;
                this.RaisePropertyChanged("url");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string language {
            get {
                return this.languageField;
            }
            set {
                this.languageField = value;
                this.RaisePropertyChanged("language");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string lastModified {
            get {
                return this.lastModifiedField;
            }
            set {
                this.lastModifiedField = value;
                this.RaisePropertyChanged("lastModified");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string size {
            get {
                return this.sizeField;
            }
            set {
                this.sizeField = value;
                this.RaisePropertyChanged("size");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2612.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://cerevoice.com/soap/cloudschema")]
    public partial class listAbbreviations : object, System.ComponentModel.INotifyPropertyChanged {
        
        private object itemField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("abbreviationList", typeof(abbreviationArray), Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0)]
        [System.Xml.Serialization.XmlElementAttribute("error", typeof(Error), Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0)]
        public object Item {
            get {
                return this.itemField;
            }
            set {
                this.itemField = value;
                this.RaisePropertyChanged("Item");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2612.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://cerevoice.com/soap/cloudschema")]
    public partial class lexiconArray : object, System.ComponentModel.INotifyPropertyChanged {
        
        private lexicon[] lArrayField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("lArray", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0)]
        public lexicon[] lArray {
            get {
                return this.lArrayField;
            }
            set {
                this.lArrayField = value;
                this.RaisePropertyChanged("lArray");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2612.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://cerevoice.com/soap/cloudschema")]
    public partial class lexicon : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string urlField;
        
        private string languageField;
        
        private string accentField;
        
        private string lastModifiedField;
        
        private string sizeField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string url {
            get {
                return this.urlField;
            }
            set {
                this.urlField = value;
                this.RaisePropertyChanged("url");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string language {
            get {
                return this.languageField;
            }
            set {
                this.languageField = value;
                this.RaisePropertyChanged("language");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string accent {
            get {
                return this.accentField;
            }
            set {
                this.accentField = value;
                this.RaisePropertyChanged("accent");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string lastModified {
            get {
                return this.lastModifiedField;
            }
            set {
                this.lastModifiedField = value;
                this.RaisePropertyChanged("lastModified");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string size {
            get {
                return this.sizeField;
            }
            set {
                this.sizeField = value;
                this.RaisePropertyChanged("size");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2612.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://cerevoice.com/soap/cloudschema")]
    public partial class listLexicons : object, System.ComponentModel.INotifyPropertyChanged {
        
        private object itemField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("error", typeof(Error), Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0)]
        [System.Xml.Serialization.XmlElementAttribute("lexiconList", typeof(lexiconArray), Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0)]
        public object Item {
            get {
                return this.itemField;
            }
            set {
                this.itemField = value;
                this.RaisePropertyChanged("Item");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2612.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://cerevoice.com/soap/cloudschema")]
    public partial class voiceArray : object, System.ComponentModel.INotifyPropertyChanged {
        
        private voice[] vArrayField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("vArray", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0)]
        public voice[] vArray {
            get {
                return this.vArrayField;
            }
            set {
                this.vArrayField = value;
                this.RaisePropertyChanged("vArray");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2612.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://cerevoice.com/soap/cloudschema")]
    public partial class voice : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int sampleRateField;
        
        private string voiceNameField;
        
        private string languageCodeISOField;
        
        private string countryCodeISOField;
        
        private string accentCodeField;
        
        private string genderField;
        
        private string languageCodeMicrosoftField;
        
        private string countryField;
        
        private string regionField;
        
        private string accentField;
        
        private string languageField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int sampleRate {
            get {
                return this.sampleRateField;
            }
            set {
                this.sampleRateField = value;
                this.RaisePropertyChanged("sampleRate");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string voiceName {
            get {
                return this.voiceNameField;
            }
            set {
                this.voiceNameField = value;
                this.RaisePropertyChanged("voiceName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string languageCodeISO {
            get {
                return this.languageCodeISOField;
            }
            set {
                this.languageCodeISOField = value;
                this.RaisePropertyChanged("languageCodeISO");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string countryCodeISO {
            get {
                return this.countryCodeISOField;
            }
            set {
                this.countryCodeISOField = value;
                this.RaisePropertyChanged("countryCodeISO");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string accentCode {
            get {
                return this.accentCodeField;
            }
            set {
                this.accentCodeField = value;
                this.RaisePropertyChanged("accentCode");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string gender {
            get {
                return this.genderField;
            }
            set {
                this.genderField = value;
                this.RaisePropertyChanged("gender");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string languageCodeMicrosoft {
            get {
                return this.languageCodeMicrosoftField;
            }
            set {
                this.languageCodeMicrosoftField = value;
                this.RaisePropertyChanged("languageCodeMicrosoft");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string country {
            get {
                return this.countryField;
            }
            set {
                this.countryField = value;
                this.RaisePropertyChanged("country");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string region {
            get {
                return this.regionField;
            }
            set {
                this.regionField = value;
                this.RaisePropertyChanged("region");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string accent {
            get {
                return this.accentField;
            }
            set {
                this.accentField = value;
                this.RaisePropertyChanged("accent");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string language {
            get {
                return this.languageField;
            }
            set {
                this.languageField = value;
                this.RaisePropertyChanged("language");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="listVoices", WrapperNamespace="http://cerevoice.com/soap/cloudservice", IsWrapped=true)]
    public partial class listVoicesRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=0)]
        public string accountID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=1)]
        public string password;
        
        public listVoicesRequest() {
        }
        
        public listVoicesRequest(string accountID, string password) {
            this.accountID = accountID;
            this.password = password;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="listVoicesResponse", WrapperNamespace="http://cerevoice.com/soap/cloudservice", IsWrapped=true)]
    public partial class listVoicesResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=0)]
        public SSound.CereVoice.listVoices voicesList;
        
        public listVoicesResponse() {
        }
        
        public listVoicesResponse(SSound.CereVoice.listVoices voicesList) {
            this.voicesList = voicesList;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="listLexicons", WrapperNamespace="http://cerevoice.com/soap/cloudservice", IsWrapped=true)]
    public partial class listLexiconsRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=0)]
        public string accountID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=1)]
        public string password;
        
        public listLexiconsRequest() {
        }
        
        public listLexiconsRequest(string accountID, string password) {
            this.accountID = accountID;
            this.password = password;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="listLexiconsResponse", WrapperNamespace="http://cerevoice.com/soap/cloudservice", IsWrapped=true)]
    public partial class listLexiconsResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=0)]
        public SSound.CereVoice.listLexicons lexiconList;
        
        public listLexiconsResponse() {
        }
        
        public listLexiconsResponse(SSound.CereVoice.listLexicons lexiconList) {
            this.lexiconList = lexiconList;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="listAbbreviations", WrapperNamespace="http://cerevoice.com/soap/cloudservice", IsWrapped=true)]
    public partial class listAbbreviationsRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=0)]
        public string accountID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=1)]
        public string password;
        
        public listAbbreviationsRequest() {
        }
        
        public listAbbreviationsRequest(string accountID, string password) {
            this.accountID = accountID;
            this.password = password;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="listAbbreviationsResponse", WrapperNamespace="http://cerevoice.com/soap/cloudservice", IsWrapped=true)]
    public partial class listAbbreviationsResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=0)]
        public SSound.CereVoice.listAbbreviations abbreviationList;
        
        public listAbbreviationsResponse() {
        }
        
        public listAbbreviationsResponse(SSound.CereVoice.listAbbreviations abbreviationList) {
            this.abbreviationList = abbreviationList;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="listAudioFormats", WrapperNamespace="http://cerevoice.com/soap/cloudservice", IsWrapped=true)]
    public partial class listAudioFormatsRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=0)]
        public string accountID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=1)]
        public string password;
        
        public listAudioFormatsRequest() {
        }
        
        public listAudioFormatsRequest(string accountID, string password) {
            this.accountID = accountID;
            this.password = password;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="listAudioFormatsResponse", WrapperNamespace="http://cerevoice.com/soap/cloudservice", IsWrapped=true)]
    public partial class listAudioFormatsResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=0)]
        public SSound.CereVoice.listAudioFormats formatList;
        
        public listAudioFormatsResponse() {
        }
        
        public listAudioFormatsResponse(SSound.CereVoice.listAudioFormats formatList) {
            this.formatList = formatList;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getCredit", WrapperNamespace="http://cerevoice.com/soap/cloudservice", IsWrapped=true)]
    public partial class getCreditRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=0)]
        public string accountID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=1)]
        public string password;
        
        public getCreditRequest() {
        }
        
        public getCreditRequest(string accountID, string password) {
            this.accountID = accountID;
            this.password = password;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getCreditResponse", WrapperNamespace="http://cerevoice.com/soap/cloudservice", IsWrapped=true)]
    public partial class getCreditResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=0)]
        public SSound.CereVoice.GetCredit getcredit;
        
        public getCreditResponse() {
        }
        
        public getCreditResponse(SSound.CereVoice.GetCredit getcredit) {
            this.getcredit = getcredit;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="uploadLexicon", WrapperNamespace="http://cerevoice.com/soap/cloudservice", IsWrapped=true)]
    public partial class uploadLexiconRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=0)]
        public string accountID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=1)]
        public string password;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=2)]
        public string lexiconFile;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=3)]
        public string language;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=4)]
        public string accent;
        
        public uploadLexiconRequest() {
        }
        
        public uploadLexiconRequest(string accountID, string password, string lexiconFile, string language, string accent) {
            this.accountID = accountID;
            this.password = password;
            this.lexiconFile = lexiconFile;
            this.language = language;
            this.accent = accent;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="uploadLexiconResponse", WrapperNamespace="http://cerevoice.com/soap/cloudservice", IsWrapped=true)]
    public partial class uploadLexiconResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=0)]
        public int resultCode;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=1)]
        public string resultDescription;
        
        public uploadLexiconResponse() {
        }
        
        public uploadLexiconResponse(int resultCode, string resultDescription) {
            this.resultCode = resultCode;
            this.resultDescription = resultDescription;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="uploadAbbreviations", WrapperNamespace="http://cerevoice.com/soap/cloudservice", IsWrapped=true)]
    public partial class uploadAbbreviationsRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=0)]
        public string accountID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=1)]
        public string password;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=2)]
        public string abbreviationFile;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=3)]
        public string language;
        
        public uploadAbbreviationsRequest() {
        }
        
        public uploadAbbreviationsRequest(string accountID, string password, string abbreviationFile, string language) {
            this.accountID = accountID;
            this.password = password;
            this.abbreviationFile = abbreviationFile;
            this.language = language;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="uploadAbbreviationsResponse", WrapperNamespace="http://cerevoice.com/soap/cloudservice", IsWrapped=true)]
    public partial class uploadAbbreviationsResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=0)]
        public int resultCode;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=1)]
        public string resultDescription;
        
        public uploadAbbreviationsResponse() {
        }
        
        public uploadAbbreviationsResponse(int resultCode, string resultDescription) {
            this.resultCode = resultCode;
            this.resultDescription = resultDescription;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface CereVoiceCloudPortTypeChannel : SSound.CereVoice.CereVoiceCloudPortType, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CereVoiceCloudPortTypeClient : System.ServiceModel.ClientBase<SSound.CereVoice.CereVoiceCloudPortType>, SSound.CereVoice.CereVoiceCloudPortType {
        
        public CereVoiceCloudPortTypeClient() {
        }
        
        public CereVoiceCloudPortTypeClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public CereVoiceCloudPortTypeClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CereVoiceCloudPortTypeClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CereVoiceCloudPortTypeClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        SSound.CereVoice.speakSimpleResponse SSound.CereVoice.CereVoiceCloudPortType.speakSimple(SSound.CereVoice.speakSimpleRequest request) {
            return base.Channel.speakSimple(request);
        }
        
        public string speakSimple(string accountID, string password, string voice, string text, out int charCount, out int resultCode, out string resultDescription) {
            SSound.CereVoice.speakSimpleRequest inValue = new SSound.CereVoice.speakSimpleRequest();
            inValue.accountID = accountID;
            inValue.password = password;
            inValue.voice = voice;
            inValue.text = text;
            SSound.CereVoice.speakSimpleResponse retVal = ((SSound.CereVoice.CereVoiceCloudPortType)(this)).speakSimple(inValue);
            charCount = retVal.charCount;
            resultCode = retVal.resultCode;
            resultDescription = retVal.resultDescription;
            return retVal.fileUrl;
        }
        
        public System.Threading.Tasks.Task<SSound.CereVoice.speakSimpleResponse> speakSimpleAsync(SSound.CereVoice.speakSimpleRequest request) {
            return base.Channel.speakSimpleAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        SSound.CereVoice.speakExtendedResponse SSound.CereVoice.CereVoiceCloudPortType.speakExtended(SSound.CereVoice.speakExtendedRequest request) {
            return base.Channel.speakExtended(request);
        }
        
        public string speakExtended(string accountID, string password, string voice, string text, string contentType, int sampleRate, bool audio3D, bool metadata, out int charCount, out int resultCode, out string resultDescription, out string metadataUrl) {
            SSound.CereVoice.speakExtendedRequest inValue = new SSound.CereVoice.speakExtendedRequest();
            inValue.accountID = accountID;
            inValue.password = password;
            inValue.voice = voice;
            inValue.text = text;
            inValue.contentType = contentType;
            inValue.sampleRate = sampleRate;
            inValue.audio3D = audio3D;
            inValue.metadata = metadata;
            SSound.CereVoice.speakExtendedResponse retVal = ((SSound.CereVoice.CereVoiceCloudPortType)(this)).speakExtended(inValue);
            charCount = retVal.charCount;
            resultCode = retVal.resultCode;
            resultDescription = retVal.resultDescription;
            metadataUrl = retVal.metadataUrl;
            return retVal.fileUrl;
        }
        
        public System.Threading.Tasks.Task<SSound.CereVoice.speakExtendedResponse> speakExtendedAsync(SSound.CereVoice.speakExtendedRequest request) {
            return base.Channel.speakExtendedAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        SSound.CereVoice.listVoicesResponse SSound.CereVoice.CereVoiceCloudPortType.listVoices(SSound.CereVoice.listVoicesRequest request) {
            return base.Channel.listVoices(request);
        }
        
        public SSound.CereVoice.listVoices listVoices(string accountID, string password) {
            SSound.CereVoice.listVoicesRequest inValue = new SSound.CereVoice.listVoicesRequest();
            inValue.accountID = accountID;
            inValue.password = password;
            SSound.CereVoice.listVoicesResponse retVal = ((SSound.CereVoice.CereVoiceCloudPortType)(this)).listVoices(inValue);
            return retVal.voicesList;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<SSound.CereVoice.listVoicesResponse> SSound.CereVoice.CereVoiceCloudPortType.listVoicesAsync(SSound.CereVoice.listVoicesRequest request) {
            return base.Channel.listVoicesAsync(request);
        }
        
        public System.Threading.Tasks.Task<SSound.CereVoice.listVoicesResponse> listVoicesAsync(string accountID, string password) {
            SSound.CereVoice.listVoicesRequest inValue = new SSound.CereVoice.listVoicesRequest();
            inValue.accountID = accountID;
            inValue.password = password;
            return ((SSound.CereVoice.CereVoiceCloudPortType)(this)).listVoicesAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        SSound.CereVoice.listLexiconsResponse SSound.CereVoice.CereVoiceCloudPortType.listLexicons(SSound.CereVoice.listLexiconsRequest request) {
            return base.Channel.listLexicons(request);
        }
        
        public SSound.CereVoice.listLexicons listLexicons(string accountID, string password) {
            SSound.CereVoice.listLexiconsRequest inValue = new SSound.CereVoice.listLexiconsRequest();
            inValue.accountID = accountID;
            inValue.password = password;
            SSound.CereVoice.listLexiconsResponse retVal = ((SSound.CereVoice.CereVoiceCloudPortType)(this)).listLexicons(inValue);
            return retVal.lexiconList;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<SSound.CereVoice.listLexiconsResponse> SSound.CereVoice.CereVoiceCloudPortType.listLexiconsAsync(SSound.CereVoice.listLexiconsRequest request) {
            return base.Channel.listLexiconsAsync(request);
        }
        
        public System.Threading.Tasks.Task<SSound.CereVoice.listLexiconsResponse> listLexiconsAsync(string accountID, string password) {
            SSound.CereVoice.listLexiconsRequest inValue = new SSound.CereVoice.listLexiconsRequest();
            inValue.accountID = accountID;
            inValue.password = password;
            return ((SSound.CereVoice.CereVoiceCloudPortType)(this)).listLexiconsAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        SSound.CereVoice.listAbbreviationsResponse SSound.CereVoice.CereVoiceCloudPortType.listAbbreviations(SSound.CereVoice.listAbbreviationsRequest request) {
            return base.Channel.listAbbreviations(request);
        }
        
        public SSound.CereVoice.listAbbreviations listAbbreviations(string accountID, string password) {
            SSound.CereVoice.listAbbreviationsRequest inValue = new SSound.CereVoice.listAbbreviationsRequest();
            inValue.accountID = accountID;
            inValue.password = password;
            SSound.CereVoice.listAbbreviationsResponse retVal = ((SSound.CereVoice.CereVoiceCloudPortType)(this)).listAbbreviations(inValue);
            return retVal.abbreviationList;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<SSound.CereVoice.listAbbreviationsResponse> SSound.CereVoice.CereVoiceCloudPortType.listAbbreviationsAsync(SSound.CereVoice.listAbbreviationsRequest request) {
            return base.Channel.listAbbreviationsAsync(request);
        }
        
        public System.Threading.Tasks.Task<SSound.CereVoice.listAbbreviationsResponse> listAbbreviationsAsync(string accountID, string password) {
            SSound.CereVoice.listAbbreviationsRequest inValue = new SSound.CereVoice.listAbbreviationsRequest();
            inValue.accountID = accountID;
            inValue.password = password;
            return ((SSound.CereVoice.CereVoiceCloudPortType)(this)).listAbbreviationsAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        SSound.CereVoice.listAudioFormatsResponse SSound.CereVoice.CereVoiceCloudPortType.listAudioFormats(SSound.CereVoice.listAudioFormatsRequest request) {
            return base.Channel.listAudioFormats(request);
        }
        
        public SSound.CereVoice.listAudioFormats listAudioFormats(string accountID, string password) {
            SSound.CereVoice.listAudioFormatsRequest inValue = new SSound.CereVoice.listAudioFormatsRequest();
            inValue.accountID = accountID;
            inValue.password = password;
            SSound.CereVoice.listAudioFormatsResponse retVal = ((SSound.CereVoice.CereVoiceCloudPortType)(this)).listAudioFormats(inValue);
            return retVal.formatList;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<SSound.CereVoice.listAudioFormatsResponse> SSound.CereVoice.CereVoiceCloudPortType.listAudioFormatsAsync(SSound.CereVoice.listAudioFormatsRequest request) {
            return base.Channel.listAudioFormatsAsync(request);
        }
        
        public System.Threading.Tasks.Task<SSound.CereVoice.listAudioFormatsResponse> listAudioFormatsAsync(string accountID, string password) {
            SSound.CereVoice.listAudioFormatsRequest inValue = new SSound.CereVoice.listAudioFormatsRequest();
            inValue.accountID = accountID;
            inValue.password = password;
            return ((SSound.CereVoice.CereVoiceCloudPortType)(this)).listAudioFormatsAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        SSound.CereVoice.getCreditResponse SSound.CereVoice.CereVoiceCloudPortType.getCredit(SSound.CereVoice.getCreditRequest request) {
            return base.Channel.getCredit(request);
        }
        
        public SSound.CereVoice.GetCredit getCredit(string accountID, string password) {
            SSound.CereVoice.getCreditRequest inValue = new SSound.CereVoice.getCreditRequest();
            inValue.accountID = accountID;
            inValue.password = password;
            SSound.CereVoice.getCreditResponse retVal = ((SSound.CereVoice.CereVoiceCloudPortType)(this)).getCredit(inValue);
            return retVal.getcredit;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<SSound.CereVoice.getCreditResponse> SSound.CereVoice.CereVoiceCloudPortType.getCreditAsync(SSound.CereVoice.getCreditRequest request) {
            return base.Channel.getCreditAsync(request);
        }
        
        public System.Threading.Tasks.Task<SSound.CereVoice.getCreditResponse> getCreditAsync(string accountID, string password) {
            SSound.CereVoice.getCreditRequest inValue = new SSound.CereVoice.getCreditRequest();
            inValue.accountID = accountID;
            inValue.password = password;
            return ((SSound.CereVoice.CereVoiceCloudPortType)(this)).getCreditAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        SSound.CereVoice.uploadLexiconResponse SSound.CereVoice.CereVoiceCloudPortType.uploadLexicon(SSound.CereVoice.uploadLexiconRequest request) {
            return base.Channel.uploadLexicon(request);
        }
        
        public int uploadLexicon(string accountID, string password, string lexiconFile, string language, string accent, out string resultDescription) {
            SSound.CereVoice.uploadLexiconRequest inValue = new SSound.CereVoice.uploadLexiconRequest();
            inValue.accountID = accountID;
            inValue.password = password;
            inValue.lexiconFile = lexiconFile;
            inValue.language = language;
            inValue.accent = accent;
            SSound.CereVoice.uploadLexiconResponse retVal = ((SSound.CereVoice.CereVoiceCloudPortType)(this)).uploadLexicon(inValue);
            resultDescription = retVal.resultDescription;
            return retVal.resultCode;
        }
        
        public System.Threading.Tasks.Task<SSound.CereVoice.uploadLexiconResponse> uploadLexiconAsync(SSound.CereVoice.uploadLexiconRequest request) {
            return base.Channel.uploadLexiconAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        SSound.CereVoice.uploadAbbreviationsResponse SSound.CereVoice.CereVoiceCloudPortType.uploadAbbreviations(SSound.CereVoice.uploadAbbreviationsRequest request) {
            return base.Channel.uploadAbbreviations(request);
        }
        
        public int uploadAbbreviations(string accountID, string password, string abbreviationFile, string language, out string resultDescription) {
            SSound.CereVoice.uploadAbbreviationsRequest inValue = new SSound.CereVoice.uploadAbbreviationsRequest();
            inValue.accountID = accountID;
            inValue.password = password;
            inValue.abbreviationFile = abbreviationFile;
            inValue.language = language;
            SSound.CereVoice.uploadAbbreviationsResponse retVal = ((SSound.CereVoice.CereVoiceCloudPortType)(this)).uploadAbbreviations(inValue);
            resultDescription = retVal.resultDescription;
            return retVal.resultCode;
        }
        
        public System.Threading.Tasks.Task<SSound.CereVoice.uploadAbbreviationsResponse> uploadAbbreviationsAsync(SSound.CereVoice.uploadAbbreviationsRequest request) {
            return base.Channel.uploadAbbreviationsAsync(request);
        }
    }
}
